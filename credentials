R2 Account Token was successfully created
Summary:
Permissions:

Allows the ability to create, list, and delete buckets, edit bucket configuration, read, write, and list objects, and read and write access to data catalog tables and associated metadata.
Buckets:All R2 buckets on this account


slVrDMNSya3dQIZ5DeUZctIKPtJ24-gtMuyTObmH Token Value

a5a6f3dced003aef38e05ce4002d3da9 Access Key ID

e656187a77362dcbf172f2ff6bc790915ac6992cb062c8aaf04ee8bd276951a2   Secret Access Key


Use jurisdiction-specific endpoints for S3 clients:

Default: https://a472768f5dff0e95af7610729ca9c462.r2.cloudflarestorage.com

EU:      https://a472768f5dff0e95af7610729ca9c462.eu.r2.cloudflarestorage.com



PS C:\Users\seeyo\2020_MitLogin\2020_Login> deno run --allow-net --allow-env main.ts


Umgebungsvariablen setzen

$Env:R2_ACCESS_KEY_ID = "your-access-key-id"
$Env:R2_SECRET_ACCESS_KEY = "your-secret-access-key"

$Env:R2_ENDPOINT="https://a472768f5dff0e95af7610729ca9c462.r2.cloudflarestorage.com"
$Env:R2_ACCESS_KEY_ID="a5a6f3dced003aef38e05ce4002d3da9"
$Env:R2_SECRET_ACCESS_KEY="e656187a77362dcbf172f2ff6bc790915ac6992cb062c8aaf04ee8bd276951a2"
$Env:R2_BUCKET_NAME="bucket2"
$Env:SUBDOMAIN="cloudflarepath.iconicity.de"



$Env:SUBDOMAIN="2020.iconicity.de"


alte funktionierende Version aus deno.jurisdiction
"start": "deno run -A --watch=static/,routes/ dev.ts",
    "build": "deno run -A dev.ts build",



    Finish setting up Fresh

The tailwindcss plugin requires ahead of time builds to be set up for production usage. To finish the setup, follow these steps:

    Go to your project in Deno Deploy and click the Settings tab.
    In the Git Integration section, enter deno task build in the Build Command input.
    Save the changes.

See the detailed guide here: https://fresh.deno.dev/docs/concepts/ahead-of-time-builds.


Here's how:

    In your GitHub repository, go to Settings > Secrets and variables > Actions.
    Click "New repository secret".
    Name the secret DENO_DEPLOY_TOKEN.
    Paste the token value (which you get from your Deno Deploy account) as the value.
    Save.

After you do this, the secret will be available to your GitHub Actions workflow. For more details, see the GitHub docs on encrypted secrets.

If you haven't generated a deploy token yet, you'll need to do that on the Deno Deploy dashboard, then copy it into GitHub as described above.


Token for Github Secrets:
ddp_NMeLDmk5F4amtikX4BN4qc9m8HMZdZ2B8vCW

https://deno.niklasmtj.de